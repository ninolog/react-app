{"ast":null,"code":"import _toConsumableArray from\"/Users/j_ninomiya/react-app/my-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/j_ninomiya/react-app/my-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useEffect,useState}from'react';import{BrowserRouter as Router,Route,Routes}from'react-router-dom';import Modal from'react-modal';import TaskList from'./TaskList';import TaskForm from'./TaskForm';import Header from'./Header';import About from'./About';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";Modal.setAppElement('#root');var App=function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tasks=_useState2[0],setTasks=_useState2[1];// アプリが最初にレンダリングされた時に、ローカルストレージからタスクを取り出す\nuseEffect(function(){var storedTasks=localStorage.getItem('tasks');if(storedTasks){setTasks(JSON.parse(storedTasks));}},[]);// タスクが更新されたときに、新しいタスクリストをローカルストレージに保存する\nuseEffect(function(){localStorage.setItem('tasks',JSON.stringify(tasks));},[tasks]);var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),editTask=_useState4[0],setEditTask=_useState4[1];var handleAddTask=function handleAddTask(newTask){setTasks([].concat(_toConsumableArray(tasks),[newTask]));};var handleDeleteTask=function handleDeleteTask(taskId){setTasks(tasks.filter(function(task){return task.id!==taskId;}));};var handleEditTask=function handleEditTask(task){setEditTask(task);};var handleUpdateTask=function handleUpdateTask(updatedTask){setTasks(tasks.map(function(task){return task.id===updatedTask.id?updatedTask:task;}));setEditTask(null);};return/*#__PURE__*/_jsx(Router,{basename:\"/\",children:/*#__PURE__*/_jsxs(\"div\",{style:styles.container,children:[/*#__PURE__*/_jsx(Header,{}),/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/nvt_j_ninomiya/my-app\",element:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(TaskForm,{onAddTask:handleAddTask,onUpdateTask:handleUpdateTask,editTask:editTask}),/*#__PURE__*/_jsx(TaskList,{tasks:tasks,onDeleteTask:handleDeleteTask,onEditTask:handleEditTask,onUpdateTask:handleUpdateTask})]})}),/*#__PURE__*/_jsx(Route,{path:\"/nvt_j_ninomiya/about\",element:/*#__PURE__*/_jsx(About,{})})]})]})});};var styles={container:{width:'600px',margin:'0 auto',backgroundColor:'#f7f7f7',padding:'30px',borderRadius:'8px'},header:{textAlign:'center',marginBottom:'30px'}};export default App;","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Route","Routes","Modal","TaskList","TaskForm","Header","About","jsx","_jsx","jsxs","_jsxs","setAppElement","App","_useState","_useState2","_slicedToArray","tasks","setTasks","storedTasks","localStorage","getItem","JSON","parse","setItem","stringify","_useState3","_useState4","editTask","setEditTask","handleAddTask","newTask","concat","_toConsumableArray","handleDeleteTask","taskId","filter","task","id","handleEditTask","handleUpdateTask","updatedTask","map","basename","children","style","styles","container","path","element","onAddTask","onUpdateTask","onDeleteTask","onEditTask","width","margin","backgroundColor","padding","borderRadius","header","textAlign","marginBottom"],"sources":["/Users/j_ninomiya/react-app/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport TaskList from './TaskList';\nimport TaskForm from './TaskForm';\nimport Header from './Header';\nimport About from './About';\n\nModal.setAppElement('#root');\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n\n  // アプリが最初にレンダリングされた時に、ローカルストレージからタスクを取り出す\n  useEffect(() => {\n    const storedTasks = localStorage.getItem('tasks');\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n  }, []);\n\n  // タスクが更新されたときに、新しいタスクリストをローカルストレージに保存する\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  const [editTask, setEditTask] = useState(null);\n\n  const handleAddTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n\n  const handleDeleteTask = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n\n  const handleEditTask = task => {\n    setEditTask(task);\n  };\n\n  const handleUpdateTask = updatedTask => {\n    setTasks(tasks.map(task => (task.id === updatedTask.id ? updatedTask : task)));\n    setEditTask(null);\n  };\n\n  return (\n    <Router basename=\"/\">\n      <div style={styles.container}>\n        <Header />\n        <Routes>\n          <Route path=\"/nvt_j_ninomiya/my-app\" element={ <div> \n            <TaskForm \n              onAddTask={handleAddTask} \n              onUpdateTask={handleUpdateTask} \n              editTask={editTask} \n            />\n            <TaskList \n              tasks={tasks} \n              onDeleteTask={handleDeleteTask} \n              onEditTask={handleEditTask} \n              onUpdateTask={handleUpdateTask} \n            />\n          </div> } />\n          <Route path=\"/nvt_j_ninomiya/about\" element={ <About /> } />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nconst styles = {\n  container: {\n    width: '600px',\n    margin: '0 auto',\n    backgroundColor: '#f7f7f7',\n    padding: '30px',\n    borderRadius: '8px',\n  },\n  header: {\n    textAlign: 'center',\n    marginBottom: '30px',\n  },\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}