{"ast":null,"code":"var _jsxFileName = \"/Users/j_ninomiya/react-app/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport TaskList from './TaskList';\nimport TaskForm from './TaskForm';\nimport Header from './Header';\nimport About from './About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // アプリが最初にレンダリングされた時に、ローカルストレージからタスクを取り出す\n  useEffect(() => {\n    const storedTasks = localStorage.getItem('tasks');\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n  }, []);\n\n  // タスクが更新されたときに、新しいタスクリストをローカルストレージに保存する\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n  const [editTask, setEditTask] = useState(null);\n  const handleAddTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n  const handleDeleteTask = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n  const handleEditTask = task => {\n    setEditTask(task);\n  };\n  const handleUpdateTask = updatedTask => {\n    setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n    setEditTask(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        exact: true,\n        children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n          onAddTask: handleAddTask,\n          onUpdateTask: handleUpdateTask,\n          editTask: editTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n          tasks: tasks,\n          onDeleteTask: handleDeleteTask,\n          onEditTask: handleEditTask,\n          onUpdateTask: handleUpdateTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/about\",\n        component: About\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WuM/8gzsZ0Si2fU38VcGOKIw19s=\");\n_c = App;\nconst styles = {\n  container: {\n    width: '600px',\n    margin: '0 auto',\n    backgroundColor: '#f7f7f7',\n    padding: '30px',\n    borderRadius: '8px'\n  },\n  header: {\n    textAlign: 'center',\n    marginBottom: '30px'\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Route","Routes","Modal","TaskList","TaskForm","Header","About","jsxDEV","_jsxDEV","setAppElement","App","_s","tasks","setTasks","storedTasks","localStorage","getItem","JSON","parse","setItem","stringify","editTask","setEditTask","handleAddTask","newTask","handleDeleteTask","taskId","filter","task","id","handleEditTask","handleUpdateTask","updatedTask","map","children","style","styles","container","fileName","_jsxFileName","lineNumber","columnNumber","path","exact","onAddTask","onUpdateTask","onDeleteTask","onEditTask","component","_c","width","margin","backgroundColor","padding","borderRadius","header","textAlign","marginBottom","$RefreshReg$"],"sources":["/Users/j_ninomiya/react-app/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\nimport Modal from 'react-modal';\nimport TaskList from './TaskList';\nimport TaskForm from './TaskForm';\nimport Header from './Header';\nimport About from './About';\n\nModal.setAppElement('#root');\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n\n  // アプリが最初にレンダリングされた時に、ローカルストレージからタスクを取り出す\n  useEffect(() => {\n    const storedTasks = localStorage.getItem('tasks');\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n  }, []);\n\n  // タスクが更新されたときに、新しいタスクリストをローカルストレージに保存する\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  const [editTask, setEditTask] = useState(null);\n\n  const handleAddTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n\n  const handleDeleteTask = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n\n  const handleEditTask = task => {\n    setEditTask(task);\n  };\n\n  const handleUpdateTask = updatedTask => {\n    setTasks(tasks.map(task => (task.id === updatedTask.id ? updatedTask : task)));\n    setEditTask(null);\n  };\n\n  return (\n    <Router>\n    <div style={styles.container}>\n      <Header />\n      <Route path=\"/\" exact>\n      <TaskForm \n        onAddTask={handleAddTask} \n        onUpdateTask={handleUpdateTask} \n        editTask={editTask} \n      />\n      <TaskList \n        tasks={tasks} \n        onDeleteTask={handleDeleteTask} \n        onEditTask={handleEditTask} \n        onUpdateTask={handleUpdateTask} \n      />\n      </Route>\n      <Route path=\"/about\" component={About} />\n    </div>\n    </Router>\n  );\n};\n\nconst styles = {\n  container: {\n    width: '600px',\n    margin: '0 auto',\n    backgroundColor: '#f7f7f7',\n    padding: '30px',\n    borderRadius: '8px',\n  },\n  header: {\n    textAlign: 'center',\n    marginBottom: '30px',\n  },\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}