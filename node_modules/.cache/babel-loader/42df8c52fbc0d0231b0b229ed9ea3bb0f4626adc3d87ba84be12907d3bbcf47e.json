{"ast":null,"code":"var _jsxFileName = \"/Users/j_ninomiya/\\u8A66\\u4F5C/react-app/my-app/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport TaskList from './TaskList';\nimport TaskForm from './TaskForm';\nimport Header from './Header';\nimport About from './About';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n\n  // アプリが最初にレンダリングされた時に、ローカルストレージからタスクを取り出す\n  useEffect(() => {\n    const storedTasks = localStorage.getItem('tasks');\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n  }, []);\n\n  // タスクが更新されたときに、新しいタスクリストをローカルストレージに保存する\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  // 編集中のタスクを管理する\n  const [editTask, setEditTask] = useState(null);\n\n  // タスクを追加する\n  const handleAddTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n\n  // タスクを削除する\n  const handleDeleteTask = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n  const handleEditTask = task => {\n    setEditTask(task);\n  };\n  const handleUpdateTask = updatedTask => {\n    setTasks(tasks.map(task => task.id === updatedTask.id ? updatedTask : task));\n    setEditTask(null);\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    basename: \"/\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(TaskForm, {\n              onAddTask: handleAddTask,\n              onUpdateTask: handleUpdateTask,\n              editTask: editTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(TaskList, {\n              tasks: tasks,\n              onDeleteTask: handleDeleteTask,\n              onEditTask: handleEditTask,\n              onUpdateTask: handleUpdateTask\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/about\",\n          element: /*#__PURE__*/_jsxDEV(About, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 42\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"WuM/8gzsZ0Si2fU38VcGOKIw19s=\");\n_c = App;\nconst styles = {\n  container: {\n    width: '600px',\n    margin: '0 auto',\n    backgroundColor: '#f7f7f7',\n    padding: '30px',\n    borderRadius: '8px'\n  },\n  header: {\n    textAlign: 'center',\n    marginBottom: '30px'\n  }\n};\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","BrowserRouter","Router","Route","Routes","Modal","TaskList","TaskForm","Header","About","jsxDEV","_jsxDEV","setAppElement","App","_s","tasks","setTasks","storedTasks","localStorage","getItem","JSON","parse","setItem","stringify","editTask","setEditTask","handleAddTask","newTask","handleDeleteTask","taskId","filter","task","id","handleEditTask","handleUpdateTask","updatedTask","map","basename","children","style","styles","container","fileName","_jsxFileName","lineNumber","columnNumber","path","element","onAddTask","onUpdateTask","onDeleteTask","onEditTask","_c","width","margin","backgroundColor","padding","borderRadius","header","textAlign","marginBottom","$RefreshReg$"],"sources":["/Users/j_ninomiya/試作/react-app/my-app/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport Modal from 'react-modal';\nimport TaskList from './TaskList';\nimport TaskForm from './TaskForm';\nimport Header from './Header';\nimport About from './About';\n\nModal.setAppElement('#root');\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n\n  // アプリが最初にレンダリングされた時に、ローカルストレージからタスクを取り出す\n  useEffect(() => {\n    const storedTasks = localStorage.getItem('tasks');\n    if (storedTasks) {\n      setTasks(JSON.parse(storedTasks));\n    }\n  }, []);\n\n  // タスクが更新されたときに、新しいタスクリストをローカルストレージに保存する\n  useEffect(() => {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }, [tasks]);\n\n  // 編集中のタスクを管理する\n  const [editTask, setEditTask] = useState(null);\n\n  // タスクを追加する\n  const handleAddTask = newTask => {\n    setTasks([...tasks, newTask]);\n  };\n\n  // タスクを削除する\n  const handleDeleteTask = taskId => {\n    setTasks(tasks.filter(task => task.id !== taskId));\n  };\n\n  const handleEditTask = task => {\n    setEditTask(task);\n  };\n\n  const handleUpdateTask = updatedTask => {\n    setTasks(tasks.map(task => (task.id === updatedTask.id ? updatedTask : task)));\n    setEditTask(null);\n  };\n\n  return (\n    <Router basename=\"/\">\n      <div style={styles.container}>\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={ <div> \n            <TaskForm \n              onAddTask={handleAddTask} \n              onUpdateTask={handleUpdateTask} \n              editTask={editTask} \n            />\n            <TaskList \n              tasks={tasks} \n              onDeleteTask={handleDeleteTask} \n              onEditTask={handleEditTask} \n              onUpdateTask={handleUpdateTask} \n            />\n          </div> } />\n          <Route path=\"/about\" element={ <About /> } />\n        </Routes>\n      </div>\n    </Router>\n  );\n};\n\nconst styles = {\n  container: {\n    width: '600px',\n    margin: '0 auto',\n    backgroundColor: '#f7f7f7',\n    padding: '30px',\n    borderRadius: '8px',\n  },\n  header: {\n    textAlign: 'center',\n    marginBottom: '30px',\n  },\n};\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}