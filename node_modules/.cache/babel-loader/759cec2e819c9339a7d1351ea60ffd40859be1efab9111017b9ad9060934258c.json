{"ast":null,"code":"var _jsxFileName = \"/Users/j_ninomiya/react-app/my-app/src/TaskForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskForm = _ref => {\n  _s();\n  let {\n    onAddTask,\n    onUpdateTask,\n    editTask\n  } = _ref;\n  const [title, setTitle] = useState('');\n  const [date, setDate] = useState('');\n  const [isEditing, setIsEditing] = useState(false); // 編集モードのフラグ\n\n  useEffect(() => {\n    if (editTask) {\n      setTitle(editTask.title);\n      setDate(editTask.date);\n      setIsEditing(true); // 編集モードの場合はフラグをオンに設定\n    } else {\n      setTitle('');\n      setDate('');\n      setIsEditing(false); // 追加モードの場合はフラグをオフに設定\n    }\n  }, [editTask]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (title.trim() !== '') {\n      if (editTask) {\n        // 編集モードの場合\n        const updatedTask = {\n          id: editTask.id,\n          title,\n          date\n        };\n        onUpdateTask(updatedTask);\n      } else {\n        // 追加モードの場合\n        const newTask = {\n          id: Date.now(),\n          title,\n          date\n        };\n        onAddTask(newTask);\n      }\n      setTitle('');\n      setDate('');\n      setIsEditing(false); // フォームを非表示にするためにフラグをオフに設定\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: isEditing && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        value: date,\n        onChange: e => setDate(e.target.value),\n        placeholder: \"Enter a task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Enter a task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editTask ? 'Update Task' : 'Add Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskForm, \"Sn+D8HZXQaPR8+Bqe3cl18FGIfs=\");\n_c = TaskForm;\nexport default TaskForm;\nvar _c;\n$RefreshReg$(_c, \"TaskForm\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskForm","_ref","_s","onAddTask","onUpdateTask","editTask","title","setTitle","date","setDate","isEditing","setIsEditing","handleSubmit","e","preventDefault","trim","updatedTask","id","newTask","Date","now","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/j_ninomiya/react-app/my-app/src/TaskForm.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst TaskForm = ({ onAddTask, onUpdateTask, editTask }) => {\n  const [title, setTitle] = useState('');\n  const [date, setDate] = useState('');\n  const [isEditing, setIsEditing] = useState(false); // 編集モードのフラグ\n\n  useEffect(() => {\n    if (editTask) {\n      setTitle(editTask.title);\n      setDate(editTask.date);\n      setIsEditing(true); // 編集モードの場合はフラグをオンに設定\n    } else {\n      setTitle('');\n      setDate('');\n      setIsEditing(false); // 追加モードの場合はフラグをオフに設定\n    }\n  }, [editTask]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (title.trim() !== '') {\n      if (editTask) {\n        // 編集モードの場合\n        const updatedTask = { id: editTask.id, title, date };\n        onUpdateTask(updatedTask);\n      } else {\n        // 追加モードの場合\n        const newTask = { id: Date.now(), title, date };\n        onAddTask(newTask);\n      }\n      setTitle('');\n      setDate('');\n      setIsEditing(false); // フォームを非表示にするためにフラグをオフに設定\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      {isEditing && (\n        <>\n          <input\n            type=\"date\"\n            value={date}\n            onChange={e => setDate(e.target.value)}\n            placeholder=\"Enter a task\"\n          /><br />\n          <input\n            type=\"text\"\n            value={title}\n            onChange={e => setTitle(e.target.value)}\n            placeholder=\"Enter a task\"\n          /><br />\n          <button type=\"submit\">{editTask ? 'Update Task' : 'Add Task'}</button>\n        </>\n      )}\n    </form>\n  );\n};\n\nexport default TaskForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}